"""Change UserExperience, UserEducation start_month, end_month type

Revision ID: 231015bbbaad
Revises: 9970b96b3619
Create Date: 2024-05-14 11:47:33.758827

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "231015bbbaad"
down_revision: Union[str, None] = "9970b96b3619"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def month_to_int(value: str) -> str:
    expression = f"""
        CASE
            WHEN {value} = 'January' THEN 1
            WHEN {value} = 'February' THEN 2
            WHEN {value} = 'March' THEN 3
            WHEN {value} = 'April' THEN 4
            WHEN {value} = 'May' THEN 5
            WHEN {value} = 'June' THEN 6
            WHEN {value} = 'July' THEN 7
            WHEN {value} = 'August' THEN 8
            WHEN {value} = 'September' THEN 9
            WHEN {value} = 'October' THEN 10
            WHEN {value} = 'November' THEN 11
            WHEN {value} = 'December' THEN 12
        END
    """
    return expression


def int_to_month(value: str) -> str:
    expression = f"""
        CASE
            WHEN {value} = 1 THEN 'January'::month
            WHEN {value} = 2 THEN 'February'::month
            WHEN {value} = 3 THEN 'March'::month
            WHEN {value} = 4 THEN 'April'::month
            WHEN {value} = 5 THEN 'May'::month
            WHEN {value} = 6 THEN 'June'::month
            WHEN {value} = 7 THEN 'July'::month
            WHEN {value} = 8 THEN 'August'::month
            WHEN {value} = 9 THEN 'September'::month
            WHEN {value} = 10 THEN 'October'::month
            WHEN {value} = 11 THEN 'November'::month
            WHEN {value} = 12 THEN 'December'::month
        END
    """
    return expression


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        f"""
                ALTER TABLE education ALTER COLUMN start_month TYPE integer
                USING ({month_to_int('start_month')});
            """
    )
    op.execute(
        f"""
                ALTER TABLE education ALTER COLUMN end_month TYPE integer
                USING ({month_to_int('end_month')});
            """
    )
    op.execute(
        f"""
                ALTER TABLE user_experience ALTER COLUMN start_month TYPE integer
                USING ({month_to_int('start_month')});
            """
    )
    op.execute(
        f"""
                ALTER TABLE user_experience ALTER COLUMN end_month TYPE integer
                USING ({month_to_int('end_month')});
            """
    )
    sa.Enum(
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
        name="month",
    ).drop(op.get_bind())
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
        name="month",
    ).create(op.get_bind())
    op.execute(
        f"""
            ALTER TABLE user_experience ALTER COLUMN end_month TYPE month
            USING ({int_to_month('end_month')});
        """
    )
    op.execute(
        f"""
            ALTER TABLE user_experience ALTER COLUMN start_month TYPE month
            USING ({int_to_month('start_month')});
        """
    )
    op.execute(
        f"""
            ALTER TABLE education ALTER COLUMN end_month TYPE month
            USING ({int_to_month('end_month')});
        """
    )
    op.execute(
        f"""
            ALTER TABLE education ALTER COLUMN start_month TYPE month
            USING ({int_to_month('start_month')});
        """
    )
    # ### end Alembic commands ###
